{
  "keyboard_shortcut": "", 
  "name": "test", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/*\tKomodo Edit Prefs", 
    "\t================================================================================================================", 
    "", 
    "//\thttp://community.activestate.com/faq/komodo-profile-structure", 
    "//\thttp://community.activestate.com/faq/komodo-file-locations", 
    "//\thttp://community.activestate.com/faq/getting-setting-komodo-preference", 
    "//\thttp://svn.openkomodo.com/openkomodo/view/openkomodo/trunk/src/prefs/prefs.p.xml", 
    "//\thttp://community.activestate.com/forum/where-does-komodo-store-file-preferences", 
    "//\thttp://grok.openkomodo.com/source/xref/openkomodo/trunk/src/prefs/koIPrefs.idl#114", 
    "//\thttp://www.koders.com/javascript/fid7B93638BF3D5E6E8BFE1DCD0FBE3A837AA6C2B58.aspx?s=firefox", 
    "//\thttp://community.activestate.com/node/8422", 
    "//\thttp://community.activestate.com/tags/komodo-preference-set", 
    "", 
    "\t================================================================================================================ */", 
    "", 
    "\tString.prototype.sprintf=function() {", 
    "\t\tvar string=this;", 
    "\t\tfor(var i=0;i<arguments.length;i++) string=string.replace(/%s/,arguments[i]);", 
    "\t\treturn string;", 
    "\t};", 
    "", 
    "\tvar lineColWidget = document.getElementById('statusbar-line-col');", 
    "\tfunction say(message) {", 
    "\t\tlineColWidget.setAttribute('label', message);", 
    "\t}", 
    "say('hello')", 
    "", 
    "/*", 
    "", 
    "C++,CSS,CoffeeScript,Django,EJS,Go,HTML,HTML5,JSON,JavaScript,LaravelBlade,Less,MXML,Markdown,Mason,Node.js,PHP,Perl,Python,Python3,RHTML,Ruby,SCSS,Smarty,Tcl,TemplateToolkit,Text,Twig,XBL,XML,XUL,epMojo", 
    "", 
    "*/", 
    "", 
    "//setKOPrefs(getKOPrefs());", 
    "//alert(JSON.stringify(getKOPrefs()));", 
    "//var thePrefs=defaultKOPrefs();", 
    "//setLanguagePrefs(thePrefs['setPrimary']);", 
    "//setLanguagePrefs(thePrefs['setSecondary']);", 
    "//setLanguagePrefs(true);", 
    "", 
    "//setKOPrefs(defaultKOPrefs());", 
    "", 
    "//alert(JSON.stringify(getKOPrefs()));", 
    "//alert(getPrimaryLanguages());", 
    "", 
    "alert(getPrimaryLanguages())", 
    "", 
    "\tfunction defaultKOPrefs() {", 
    "\t\treturn {", 
    "\t\t\tmruProjectSize:\t\t\t\t\t{\ttype: 'long',\t\tvalue: 15 },", 
    "\t\t\tmruFileSize:\t\t\t\t\t{\ttype: 'long',\t\tvalue: 40 },", 
    "\t\t\tshow_start_page:\t\t\t\t{\ttype: 'boolean',\tvalue: 0 },", 
    "", 
    "\t\t\tcodeintelAutoInsertEndTag:\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "", 
    "\t\t\tshowWhitespace:\t\t\t\t\t{\ttype: 'boolean',\tvalue: 0 },", 
    "\t\t\tshowEOL:\t\t\t\t\t\t{\ttype: 'boolean',\tvalue: 0 },", 
    "\t\t\tshowLineNumbers:\t\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t\teditShowMinimap:\t\t\t\t{\ttype: 'boolean',\tvalue: 0 },", 
    "\t\t\teditEnableMouseZoom:\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "", 
    "\t\t\t\tuseTabs:\t\t\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t\t\teditElectricBrace:\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t\t\tshowIndentationGuides:\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t\t\tindentWidth:\t\t\t\t{\ttype: 'long',\t\tvalue: 4 },", 
    "\t\t\t\ttabWidth:\t\t\t\t\t{\ttype: 'long',\t\tvalue: 4 },", 
    "", 
    "\t\t\t\tenableAutoAbbreviations:\t{\ttype: 'boolean',\tvalue:  0 },", 
    "", 
    "\t\t\t\tcleanLineEnds:\t\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t\t\tensureFinalEOL:\t\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t\t\tautoSaveSeconds:\t\t\t{\ttype: 'long',\t\tvalue: 0 },", 
    "", 
    "//\t\t\tencodingEnvironment:\t\t\t{\ttype: 'boolean',\tvalue: 0 },", 
    "\t\t\tencodingDefault:\t\t\t\t{\ttype: 'string',\t\tvalue: 'utf-8'},", 
    "", 
    "\t\t\tprimaryLanguages:\t\t\t\t{\ttype: 'array',\t\tvalue: ['HTML','HTML5','CSS','JavaScript','PHP','SQL','MySQL'] },", 
    "\t\t\tsecondaryLanguages:\t\t\t\t{\ttype: 'array',\t\tvalue: ['Apache','Bash','JSON','Less','XML','XSLT'] },", 
    "", 
    "\t\t\tbrowser:\t\t\t\t\t\t{\ttype: 'string',\t\tvalue: '' },", 
    "\t\t\tbrowser_preview_method:\t\t\t{\ttype: 'string',\t\tvalue: 'in-tab-other-group' },", 
    "", 
    "//\t\t\tshowAllFiles:\t\t\t\t\t{\ttype: 'boolean',\tvalue: 1 },", 
    "\t\t};", 
    "\t}", 
    "", 
    "", 
    "\tfunction getKOPrefs() {", 
    "\t\tvar prefs = Components.classes['@activestate.com/koPrefService;1'].getService(Components.interfaces.koIPrefService).prefs;", 
    "\t\tvar prefset = prefs.QueryInterface(Components.interfaces.koIPreferenceSet);", 
    "", 
    "//\t\tvar langprefs = prefset.getPref('languages');", 
    "\t\tvar result = {", 
    "\t\t\tmruProjectSize:\t\t\t\t\t{\ttype: 'long',\t\tvalue: prefset.getLongPref('mruProjectSize') },", 
    "\t\t\tmruFileSize:\t\t\t\t\t{\ttype: 'long',\t\tvalue: prefset.getLongPref('mruFileSize')},", 
    "//\t\t\tshow_start_page:\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('show_start_page')},", 
    "", 
    "\t\t\tcodeintelAutoInsertEndTag:\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('codeintelAutoInsertEndTag')},", 
    "", 
    "\t\t\tshowWhitespace:\t\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('showWhitespace')},", 
    "\t\t\tshowEOL:\t\t\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('showEOL')},", 
    "\t\t\tshowLineNumbers:\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('showLineNumbers')},", 
    "\t\t\teditShowMinimap:\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('editShowMinimap')},", 
    "\t\t\teditEnableMouseZoom:\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('editEnableMouseZoom')},", 
    "", 
    "", 
    "\t\t\t\tuseTabs:\t\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('useTabs')},", 
    "\t\t\t\teditElectricBrace:\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('editElectricBrace')},", 
    "\t\t\t\tshowIndentationGuides:\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('showIndentationGuides')},", 
    "\t\t\t\tindentWidth:\t\t\t\t{\ttype: 'long',\t\tvalue: prefset.getLongPref('indentWidth')},", 
    "\t\t\t\ttabWidth:\t\t\t\t\t{\ttype: 'long',\t\tvalue: prefset.getLongPref('tabWidth')},", 
    "", 
    "\t\t\t\tenableAutoAbbreviations:\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('enableAutoAbbreviations')},", 
    "", 
    "\t\t\t\tcleanLineEnds:\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('cleanLineEnds')},", 
    "\t\t\t\tensureFinalEOL:\t\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('ensureFinalEOL')},", 
    "\t\t\t\tautoSaveSeconds:\t\t\t{\ttype: 'long',\t\tvalue: prefset.getLongPref('autoSaveSeconds')},", 
    "", 
    "//\t\t\tencodingEnvironment:\t\t\t{\ttype: 'boolean',\tvalue: prefset.getBooleanPref('encodingEnvironment')},", 
    "\t\t\tencodingDefault:\t\t\t\t{\ttype: 'string',\t\tvalue: prefset.getStringPref('encodingDefault')},", 
    "", 
    "\t\t\tbrowser:\t\t\t\t\t\t{\ttype: 'string',\t\tvalue: prefset.getStringPref('browser')},", 
    "\t\t\tbrowser_preview_method:\t\t\t{\ttype: 'string',\t\tvalue: prefset.getStringPref('browser_preview_method')},", 
    "\t\t};", 
    "\t\treturn result;", 
    "\t}", 
    "", 
    "", 
    "", 
    "\tfunction setKOPrefs(thePrefs) {", 
    "\t\tvar i;", 
    "\t\tvar prefs = Components.classes['@activestate.com/koPrefService;1'].getService(Components.interfaces.koIPrefService).prefs;", 
    "\t\tvar prefset = prefs.QueryInterface(Components.interfaces.koIPreferenceSet);", 
    "//alert(JSON.stringify(thePrefs))", 
    "", 
    "\t/*\tKey Bindings", 
    "\t\t================================================================================================================ */", 
    "", 
    "//\t\tko.keybindings.manager._add_keybinding_sequences({", 
    "//\t\t\t'cmd_lineDuplicate':\t['Meta+E']", 
    "//\t\t});", 
    "", 
    "\t/*\tAppearance", 
    "\t\t================================================================================================================ */", 
    "", 
    "\t\tprefset.setLongPref('mruProjectSize',thePrefs['mruProjectSize']);\t\t//\tNumber of Projects", 
    "\t\tprefset.setLongPref('mruFileSize',thePrefs['mruFileSize']);\t\t\t//\tNumber of Files", 
    "\t\tprefset.setBooleanPref('show_start_page',thePrefs['show_start_page']);\t//\tHide Start Page", 
    "", 
    "\t/*\tCode Intelligence", 
    "\t\t================================================================================================================ */", 
    "", 
    "\t\tprefset.setBooleanPref('codeintelAutoInsertEndTag',thePrefs['codeintelAutoInsertEndTag']);\t//\tHTML End Tags", 
    "", 
    "\t/*\tEditor (General)", 
    "\t\t================================================================================================================ */", 
    "", 
    "\t\t\tprefset.setBooleanPref('showWhitespace',thePrefs['showWhitespace']);\t\t//\tShow White Space characters", 
    "\t\t\tprefset.setBooleanPref('showEOL',thePrefs['showEOL']);\t\t\t//\tShow end-of-line characters", 
    "\t\t\tprefset.setBooleanPref('showLineNumbers',thePrefs['showLineNumbers']);\t//\tShow line numbers", 
    "\t\t\tprefset.setBooleanPref('editShowMinimap',thePrefs['editShowMinimap']);\t//\tHide MiniMap", 
    "\t\t\tprefset.setBooleanPref('editEnableMouseZoom',thePrefs['editEnableMouseZoom']);\t//\tHide MiniMap", 
    "\t\t\tprefset.setBooleanPref('codeintelAutoInsertEndTag',thePrefs['codeintelAutoInsertEndTag']);\t//\tHide MiniMap", 
    "", 
    "", 
    "\t/*\t\tIndentation", 
    "\t\t\t============================================================================================================ */", 
    "", 
    "\t\t\tprefset.setBooleanPref('useTabs',thePrefs['useTabs']);\t\t\t\t//\tPrefer Tab characters over spaces", 
    "\t\t\tprefset.setBooleanPref('editElectricBrace',thePrefs['editElectricBrace']);\t\t//\tAuto Adjust Closing Brace ?", 
    "\t\t\tprefset.setBooleanPref('showIndentationGuides',thePrefs['showIndentationGuides']);\t//\tIndentation Guides", 
    "\t\t\tprefset.setLongPref('indentWidth',thePrefs['indentWidth']);\t\t\t\t//\tNumber of spaces per indent", 
    "\t\t\tprefset.setLongPref('tabWidth',thePrefs['tabWidth']);\t\t\t\t\t//\tWidth of each Tab character", 
    "\t\t\t//\tPer Language Indentation Settings:\tSee below", 
    "", 
    "\t/*\t\tSmart Editing", 
    "\t\t\t============================================================================================================ */", 
    "\t\t\tprefset.setBooleanPref('enableAutoAbbreviations',thePrefs['enableAutoAbbreviations']);\t//\tDisable Auto Abbreviation", 
    "", 
    "\t/*\t\tSave Options", 
    "\t\t\t============================================================================================================ */", 
    "\t\t\tprefset.setBooleanPref('cleanLineEnds',thePrefs['cleanLineEnds']);\t\t//\tClean trailing white space and EOL markers", 
    "\t\t\tprefset.setBooleanPref('ensureFinalEOL',thePrefs['ensureFinalEOL']);\t\t//\tEnsure file ends with EOL marker", 
    "\t\t\tprefset.setLongPref('autoSaveSeconds',thePrefs['autoSaveSeconds']);\t\t//\tAuto-save every  seconds", 
    "", 
    "\t/*\tFonts and Colors", 
    "\t\t================================================================================================================ */", 
    "", 
    "\t\t//\tCommon Syntax", 
    "\t\t\t//\tChoose a colour for your comments, and turn off italics.", 
    "", 
    "\t/*\tInternationization", 
    "\t\t================================================================================================================ */", 
    "//\t\t\tprefset.setBooleanPref('encodingEnvironment',thePrefs['encodingEnvironment']);\t//\tUse Encoding Defined in Environment: ?", 
    "\t\t\tprefset.setStringPref('encodingDefault',thePrefs['encodingDefault']);\t//\tEncoding", 
    "\t\t\t//Language-Specific Default Encoding: See Below", 
    "\t\t\t//Signature (BOM): See Below", 
    "", 
    "\t/*\tShow All Files", 
    "\t\t============================================================================================================ */", 
    "\t\t\tif(thePrefs['showAllFiles']) {", 
    "\t\t\t\tprefset.setStringPref('import_exclude_matches','');", 
    "\t\t\t\tprefset.setStringPref('import_include_matches','');", 
    "", 
    "\t\t\t}", 
    "\t/*\tWeb & Browser", 
    "\t\t================================================================================================================ */", 
    "", 
    "//\t\tprefset.setStringPref('browser','');\t\t\t\t\t\t\t\t\t//\tWhich browser should Komodo use when opening URLs?", 
    "//\t\tprefset.setStringPref('browser_preview_method','in-tab-other-group');\t//\tWhich method should be used to preview files in browser?", 
    "//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\tin-tab-same-group", 
    "//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\texternal", 
    "", 
    "\t/*\tLanguages", 
    "\t\t================================================================================================================ */", 
    "", 
    "\t\t//\tif(thePrefs['setPrimary'])", 
    "\t\tsetLanguagePrefs(thePrefs['setSecondary']);", 
    "\t}", 
    "", 
    "\tfunction getPrimaryLanguages() {", 
    "\t\tvar Cc=Components.classes,Ci=Components.interfaces;", 
    "\t\tvar langRegistry=Cc['@activestate.com/koLanguageRegistryService;1'].getService(Ci.koILanguageRegistryService);", 
    "\t\tvar languages=[];", 
    "", 
    "\t\t//\tGet Languages", 
    "\t\t\tvar languageNames = {};", 
    "\t\t\tlangRegistry.getLanguageNames(languageNames , {}); // second {} needed to keep xpcom happy", 
    "\t\t\tlanguageNames = languageNames.value;", 
    "\t\t\tlanguageNames.forEach(function(name) {", 
    "\t\t\t\tvar koLanguage = langRegistry.getLanguage(name);", 
    "\t\t\t\tif(koLanguage.primary) languages.push(name);", 
    "\t\t\t});", 
    "\t\treturn languages;", 
    "\t}", 
    "", 
    "\tfunction listPrimaryLanguages() {", 
    "\t\tvar primaries = ['HTML','HTML5','CSS','JavaScript','PHP','SQL','MySQL'];", 
    "\t\tvar secondaries = ['Apache','Bash','JSON','Komodo Snippet','Less','XML','XSLT'];", 
    "\t\treturn [primaries,secondaries];", 
    "\t}", 
    "", 
    "", 
    "/*\tLanguage Settings: Set Primary Languages", 
    "\t================================================ */", 
    "\tfunction setLanguagePrefs(useSecondary) {", 
    "\t\t//\tGet Languages", 
    "", 
    "\t\t\tvar languages=listPrimaryLanguages();", 
    "\t\t\tvar [languages,secondaries]=listPrimaryLanguages();", 
    "\t\t\t\tif(useSecondary) languages=languages.concat(secondaries);", 
    "\t\t\t\tlanguages=['Text'].concat(languages);", 
    "", 
    "\t\t//\tGet Preferences", 
    "", 
    "\t\t\tvar prefs = Components.classes['@activestate.com/koPrefService;1'].getService(Components.interfaces.koIPrefService).prefs;", 
    "\t\t\tvar prefset = prefs.QueryInterface(Components.interfaces.koIPreferenceSet);", 
    "", 
    "\t\t\tvar Cc=Components.classes,Ci=Components.interfaces;", 
    "\t\t\tvar langRegistry = Cc[\"@activestate.com/koLanguageRegistryService;1\"].getService(Ci.koILanguageRegistryService);", 
    "\t\t\tvar languageNames = {};", 
    "\t\t\t\tlangRegistry.getLanguageNames(languageNames , {}); // second {} needed to keep xpcom happy", 
    "\t\t\t\tlanguageNames = languageNames.value;", 
    "/*", 
    "\t\t//\tGet Language Prefs", 
    "", 
    "\t\t\tvar langPrefs;", 
    "\t\t\tif (!ko.prefs.hasPrefHere('languages')) {\t//\tcreate prefs", 
    "\t\t\t\tlangPrefs = Cc['@activestate.com/koPreferenceSet;1'].createInstance();", 
    "//\t\t\t\tko.prefs.setPref(\"languages\", langPrefs);", 
    "\t\t\t} else {\t\t\t\t\t\t\t\t\t//\tprefs already exists", 
    "\t\t\t\tlangPrefs = ko.prefs.getPref(\"languages\");", 
    "\t\t\t\tvar ids = {};", 
    "//\t\t\t\tlangPrefs.getPrefIds(ids, {});", 
    "\t\t\t}", 
    "*/", 
    "\t\t//\tSet Primary Languages", 
    "\t\t\tvar madeChange = false;", 
    "", 
    "\t\t\tlanguageNames.forEach(function(name) {", 
    "\t\t\t\tvar koLanguage = langRegistry.getLanguage(name);", 
    "\t\t\t\tvar shouldBePrimary = languages.indexOf(name) >= 0;", 
    "\t\t\t\tif (koLanguage.primary != shouldBePrimary) {", 
    "\t\t\t\t\tkoLanguage.primary = shouldBePrimary;", 
    "\t\t\t\t\tmadeChange = true;", 
    "/*", 
    "\t\t\t\t\tvar langPrefName = name;", 
    "\t\t\t\t\tvar langPref = !langPrefs.hasPref(langPrefName) ? Cc[\"@activestate.com/koPreferenceSet;1\"].createInstance() : langPrefs.getPref(langPrefName);", 
    "", 
    "\t\t\t\t\t\tlangPref.setBooleanPref('primary', shouldBePrimary);", 
    "\t\t\t\t\t\tif (!langPrefs.hasPref(langPrefName)) langPrefs.setPref(langPrefName, langPref);", 
    "*/", 
    "\t\t\t\t\tprefset.setBooleanPref('languages/%s/primary'.sprintf(name), shouldBePrimary);", 
    "\t\t\t\t}", 
    "\t\t\t});", 
    "", 
    "\t\t\tif (madeChange) {", 
    "\t\t\t\tvar obsSvc = Cc[\"@mozilla.org/observer-service;1\"].getService(Ci.nsIObserverService);", 
    "\t\t\t\tobsSvc.notifyObservers(null, 'primary_languages_changed', '');", 
    "\t\t\t}", 
    "", 
    "/*\tLanguage Settings: Other", 
    "\t================================================", 
    "\t<boolean id=\"languages/JavaScript/useTabs\">1</boolean>", 
    "\t<long id=\"languages/JavaScript/tabWidth\">4</long>", 
    "\t<long id=\"languages/JavaScript/indentWidth\">4</long>", 
    "", 
    "\t<boolean id=\"languages/JavaScript/newBOM\">0</boolean>", 
    "\t<string id=\"languages/JavaScript/newEncoding\">utf-8</string>", 
    "\t================================================ */", 
    "", 
    "\t\tfor(i=0;i<languages.length;i++) {", 
    "\t\t\tlanguage=languages[i];", 
    "", 
    "\t\t\tprefset.setStringPref('languages/%s/newEncoding'.sprintf(language),'utf-8');", 
    "\t\t\tprefset.setBooleanPref('languages/%s/newBOM'.sprintf(language),0);", 
    "", 
    "\t\t\t//if(langPrefs.hasPref(language+'/useTabs'))", 
    "\t\t\tprefset.setBooleanPref('languages/%s/useTabs'.sprintf(language),1);", 
    "\t\t\t//if(langPrefs.hasPref('languages/%s/tabWidth'.sprintf(language)+'/')) langPrefs.setLongPref(language+'/tabWidth',4);", 
    "\t\t\t//else", 
    "\t\t\tprefset.setLongPref('languages/%s/tabWidth'.sprintf(language),4);", 
    "\t\t\tprefset.setLongPref('languages/%s/indentWidth'.sprintf(language),4);", 
    "\t\t}", 
    "\t}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}