<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/"?>
<?xml-stylesheet href="chrome://html-tools/content/css/dialog.css" type="text/css" ?>

<dialog
    id="dialog-heading"
    title="Convert Document Tabs"
    orient="vertical"
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:html="http://www.w3.org/1999/xhtml"
	buttons="cancel,accept"
	defaultButton="cancel"
	buttonlabelcancel="Cancel"
	ondialogcancel="return doCancel();"
	ondialogaccept="return doOK();"
	onload="init();"
	>

	<groupbox id="details">
		<radiogroup id="output">
			<box>
				<radio label="Hex" width="60" persist="selected" value="hex"/>
				<textbox id="hex" value="#000000" width="120"/>
			</box>
			<box>
				<radio label="RGB" width="60" persist="selected" value="rgb"/>
				<textbox id="rgb" value="rgb(0,0,0)" width="120"/>
			</box>
		</radiogroup>
	</groupbox>
<label id="message"/>

	<script type="application/x-javascript">
//<![CDATA[
/* exported setSource, setDestination, setAccept, init, initMore */

		var hex, RGB;
		var currentHex,currentRGB;

		var cv,editor,eol,doc,cwd;

function say(message) {
document.getElementById('message').textContent+=message;

}

		function init() {
/*

Components.utils.import("resource://gre/modules/AddonManager.jsm");
AddonManager.getAddonByID('html-tools@101courseware.com',addonInfo);
function addonInfo(addon) {
	alert(addon.version);
}
*/

			hex=document.getElementById('hex');
			currentHex=hex.value;
			RGB=document.getElementById('rgb');
			currentRGB=RGB.value;
			hex.onkeyup=RGB.onkeyup=checkColour;
			hex.onchange=RGB.onchange=updateColour;

			document.getElementById('insertHex').onclick=function() { insert(hex.value); };
			document.getElementById('insertRGB').onclick=function() { insert(RGB.value); };
		}

		function checkColour(event) {
			if(!hex.value.match(/^#[a-fA-F0-9]{0,6}$/)) hex.value=currentHex;
			else currentHex=hex.value;
			if(!RGB.value.match(/^rgb\(\d{1,3},\d{1,3},\d{1,3}\)$/)) RGB.value=currentRGB;
			else currentRGB=RGB.value;
		}

		function hex2rgb(hex) {
			var digits=hex.match(/^#?(\d\d)(\d\d)(\d\d)$/);
			return 'rgb('+parseInt(digits[1],16)+','+parseInt(digits[2],16)+','+parseInt(digits[3],16)+')';
		}

		function rgb2hex(rgb) {
			var digits=rgb.match(/^rgb\((\d+),(\d+),(\d+)\)$/);
			for(var i=1;i<4;i++) digits[i]=('0'+parseInt(digits[i],10).toString(16)).substr(-2);
			return '#'+digits[1]+digits[2]+digits[3];
		}

		function updateColour(event) {
			var value=this.value;
			if(this==hex) {
				if(value.match(/^...$/)) value=value.replace(/.?/g,function(c) { return c+c; });
				RGB.value = value.match(/^(([0-9a-zA-Z]{3}){1,2})$/) ? hex2rgb(value) : '';
			}
			else if(this==RGB) {
				hex.value = value/match(/^rgb\(\d{1,3},\d{1,3},\d{1,3}\)$/i) ? rgb2hex(value) : '';
			}
		}

		function doOK() {
			var text = document.getElementById('output').value=='rgb' ? document.getElementById('rgb').value : document.getElementById('hex').value;
			window.arguments[0].out = { 'colour': text };
			return true;
		}
		function doCancel() {
			window.arguments[0].out = null;
			return true;
		}

 //]]>
	</script>
</dialog>
